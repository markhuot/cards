{"version":3,"sources":["app.scss","app.css","include-media.scss"],"names":[],"mappings":"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","file":"app.css","sourcesContent":["@import \"include-media\";\n\n$blue: #50c3ff;\n$green: #32a942;\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  list-style: none;\n}\n\nbody {\n  background: #f5f8fa;\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n  color: #444;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n\nhr  {\n  border: none;\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n}\n\n$baseBox: 10;\n$multipliers: (\n  1,\n  2,\n  3\n);\n\n@each $multiplier in $multipliers {\n  @if $multiplier == 1 {\n    [box] { padding: $baseBox * $multiplier; }\n  }\n  @else {\n    [box=\"#{$multiplier}\"] { padding: $baseBox * $multiplier; }\n  }\n}\n\n$baseSpacing: 10;\n$spacingMultipliers: (\n  1,\n  2,\n  3,\n  4,\n  0.25\n);\n\n@each $multiplier in $spacingMultipliers {\n  @if $multiplier == 1 {\n    [spacing] > * + * { margin-top: $baseSpacing; }\n  }\n  @else {\n    [spacing=\"#{$multiplier}\"] > * + * { margin-top: $baseSpacing * $multiplier; }\n  }\n}\n\n.clearfix {\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n}\n\n.page {\n  margin-top: 30px;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n.box-shadow {\n  box-shadow: 0 1px 1px rgba(0,0,0,0.2);\n}\n\n.project-header {\n  $header-height: 70px;\n\n  background: #fff;\n  position: fixed;\n  width: 100%;\n  height: $header-height;\n  z-index: 50;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: hidden;\n\n  a {\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  input {\n    font: inherit;\n    color: inherit;\n    border: none;\n\n    &::-webkit-input-placeholder {\n      color: inherit;\n    }\n  }\n\n  &__title {\n    font-weight: 500;\n    font-size: 24px;\n    color: $blue;\n  }\n\n  &__guard {\n    padding-top: $header-height;\n  }\n}\n\n.stacks {\n  @include media('>700px') {\n    white-space: nowrap;\n  }\n}\n\n.stack {\n  display: inline-block;\n  width: 100%;\n  vertical-align: top;\n\n  @include media('>700px') {\n    height: calc(100vh - 100px);\n    width: 300px;\n    margin: 0 20px 0 0;\n  }\n\n  &__header {\n    font-weight: 600;\n    font-size: 16px;\n    height: 20px;\n\n    small {\n      float: right;\n    }\n  }\n}\n\n.create-form {\n  background: rgba(0,0,0,0.05);\n  border-radius: 2px;\n\n  &__input {\n    width: 100%;\n    font-size: 16px;\n  }\n}\n\n.card {\n  background: #fff;\n  border-radius: 2px;\n  white-space: normal;\n  display: block;\n  position: relative;\n  user-select: none;\n\n  &__description {\n    font-size: 14px;\n    color: #666;\n  }\n\n  &:hover, &:focus {\n    .card__title {\n      text-decoration: underline;\n    }\n  }\n\n  &__meta > * {\n    margin-right: 10px;\n    display: inline;\n  }\n\n  &.hot:after {\n    $size: 5px;\n\n    content: \"\";\n    width: $size;\n    height: $size;\n    background: red;\n    position: absolute;\n    top: $size;\n    right: $size;\n    border-radius: $size;\n  }\n\n  &.dragging {\n    box-shadow: none;\n    opacity: 0.5;\n  }\n}\n\n.card-stack {\n  padding-bottom: 10px;\n\n  @include media('>700px') {\n    max-height: calc(100vh - 140px);\n    overflow: auto;\n  }\n}\n\n#drag-placeholder {\n  $placeholder-color: $blue;\n  $placeholder-size: 8px;\n  $line-width: 2px;\n\n  border-top: $line-width solid $placeholder-color;\n  height: 0;\n  position: absolute;\n  z-index: 100;\n\n  &:before, &:after {\n    content: \"\";\n    position: absolute;\n    width: $placeholder-size;\n    height: $placeholder-size;\n    left: -$placeholder-size + 2;\n    top: -($placeholder-size/2) - ($line-width/2);\n    background: $placeholder-color;\n    border-radius: $placeholder-size;\n  }\n\n  &:after {\n    left: auto;\n    right: -$placeholder-size + 2;\n  }\n}\n\n#drag-proxy {\n  background: #fff;\n  width: 100px;\n  margin-top: -40px;\n  margin-left: -50px;\n  text-align: center;\n  padding: 10px 0 25px 0;\n  cursor: move;\n  z-index: 101;\n  border-radius: 10px;\n  box-shadow: 0 1px 10px rgba(0,0,0,0.2);\n  position: absolute;\n}\n\n.user-stack {\n  li {\n    display: inline-block;\n  }\n}\n\n.user-initials {\n  border-radius: 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  font-weight: 100;\n  font-size: 9px;\n  color: #fff;\n  width: 28px;\n  height: 28px;\n  background: #999;\n  margin-left: 10px;\n\n  &.empty {\n    background: none;\n    border: 2px dashed #ccc;\n    color: #ccc;\n  }\n}\n\n.longform {\n  line-height: 1.5em;\n\n  p, ul, ol, dl, h1, h2, h3, h4, h5, h6, pre, blockquote {\n    & + * {\n      margin-top: 10px;\n    }\n  }\n\n  ul, ol, dl {\n    margin-left: 40px;\n  }\n\n  ul li {\n    list-style: square;\n  }\n\n  ol li {\n    list-style: decimal;\n  }\n\n  li {\n    font-size: 14px;\n  }\n\n  code {\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    background: whiteSmoke;\n    padding: 0 2px;\n  }\n\n  a {\n    color: $blue;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  blockquote {\n    font-size: 18px;\n    color: $blue;\n    margin-left: -10px;\n    margin-right: -10px;\n    font-style: italic;\n    font-weight: 100;\n  }\n}\n\n.card-detail {\n  background: #fff;\n  border-radius: 1px;\n  max-width: 900px;\n\n  @include media('>900px') {\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 40px;\n    padding-right: 40px;\n    margin-top: 30px;\n  }\n\n  &__title {\n    font-weight: 500;\n    font-size: 24px;\n  }\n}\n\n.meta {\n  font-size: 14px;\n  color: #ccc;\n  font-weight: 300;\n\n  strong {\n    font-weight: 400;\n    color: #999;\n  }\n\n  a {\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n}\n\n.byline {\n  font-size: 14px;\n  color: #444;\n  font-weight: 600;\n}\n\n.invisible-textarea {\n  appearance: none;\n  border: none;\n  box-shadow: none;\n  font-size: 16px;\n  height: 10em;\n  width: 100%;\n  background: none;\n  line-height: 1.5;\n  border-bottom: 1px dashed #ccc;\n}\n\n.user-input {\n  background: rgba(255, 248, 232, 0.5);\n  border: 1px solid #ccc;\n}\n\n.project-preview {\n  width: 100%;\n  display: inline-block;\n  border-radius: 1px;\n  margin: 0 30px 30px 0;\n\n  &--stacks {\n    background: #fff;\n  }\n\n  @include media('>700px') {\n    width: 200px;\n    height: 200px;\n    float: left;\n  }\n}\n\n.stacks-preview {\n  height: 100px;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.stack-preview {\n  width: 30px;\n  background: $blue;\n  height: 20px;\n  display: inline-block;\n  text-indent: -9999px;\n  margin-right: 5px;\n  border-radius: 1px;\n}\n\n.comment-meta {\n  // font-style: italic;\n  // text-align: center;\n  display: inline;\n\n  &__item {\n    display: inline;\n  }\n\n  &__added {\n    // color: green;\n    // opacity: 0.4;\n    // font-weight: 600;\n  }\n\n  &__removed {\n    // color: red;\n    // opacity: 0.4;\n    // font-weight: 600;\n    text-decoration: line-through;\n  }\n}\n\n.label {\n  font-size: 14px;\n  color: #999;\n  font-weight: 500;\n}\n\n.checkbox-pill {\n  input {\n    position: absolute;\n    left: -9999px;\n\n    &:checked + label {\n      border-color: $blue;\n      background-color: $blue;\n\n      &:before {\n        content: \"\\2022\";\n      }\n    }\n\n    &[type=\"checkbox\"]:checked + label:before {\n      content: \"\\2713\";\n    }\n\n    &:focus + label {\n      text-decoration: underline;\n    }\n  }\n\n  label {\n    $dotSize: 20px;\n\n    position: relative;\n    background: #999;\n    display: inline-block;\n    border-radius: 4px;\n    padding: 3px 10px 3px $dotSize;\n    overflow: hidden;\n    font-size: 14px;\n    font-weight: 300;\n    color: #fff;\n    white-space: nowrap;\n\n    &:before {\n      content: \"\";\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: $dotSize;\n      height: 100%;\n      text-align: center;\n      line-height: $dotSize;\n    }\n  }\n}\n\n.inline-pills {\n  display: inline-block;\n}\n\n.show-card-edit {\n  position: absolute;\n  left: -9999px;\n\n  &:checked, &:checked + .card-prompt {\n    display: none;\n  }\n\n  &:checked + .card-prompt + .card-edit {\n    display: block;\n  }\n\n  &:focus + .card-prompt label {\n    text-decoration: underline;\n  }\n}\n\n.card-edit {\n  display: none;\n}\n\n.text-button {\n  color: $blue;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n}\n\n.button {\n  appearance: none;\n  border: none;\n  padding: 10px 15px;\n  background: $green;\n  border-radius: 1px;\n  font-size: 16px;\n  color: #fff;\n  font-weight: 300;\n}\n\n.progress {\n  $height: 2px;\n\n  background: transparent;\n  height: $height;\n  border-radius: $height;\n  overflow: hidden;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n\n  &__bar {\n    display: block;\n    background: $blue;\n    overflow: hidden;\n    text-indent: -9999px;\n    border-radius: $height;\n    height: $height;\n    min-width: 10px;\n  }\n}\n\n.stack-chooser {\n  &__item {\n    $arrowWidth: 50px;\n\n    float: left;\n    margin-right: $arrowWidth;\n    position: relative;\n\n    &:after {\n      content: \"\\2192\";\n      color: #999;\n      font-weight: 600;\n      position: absolute;\n      top: 0;\n      right: $arrowWidth * -1;\n      width: $arrowWidth;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n    }\n\n    &:last-child:after {\n      display: none;\n    }\n  }\n}\n\n.create-invite {\n  &__email {\n    font-size: 24px;\n    font-weight: 300;\n    width: 100%;\n    width: 100%;\n  }\n}\n","* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  list-style: none; }\n\nbody {\n  background: #f5f8fa;\n  font-family: -apple-system, BlinkMacSystemFont, Helvetica, Arial, sans-serif;\n  color: #444; }\n\na {\n  color: inherit;\n  text-decoration: none; }\n\nhr {\n  border: none;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1); }\n\n[box] {\n  padding: 10; }\n\n[box=\"2\"] {\n  padding: 20; }\n\n[box=\"3\"] {\n  padding: 30; }\n\n[spacing] > * + * {\n  margin-top: 10; }\n\n[spacing=\"2\"] > * + * {\n  margin-top: 20; }\n\n[spacing=\"3\"] > * + * {\n  margin-top: 30; }\n\n[spacing=\"4\"] > * + * {\n  margin-top: 40; }\n\n[spacing=\"0.25\"] > * + * {\n  margin-top: 2.5; }\n\n.clearfix:after {\n  content: \"\";\n  display: table;\n  clear: both; }\n\n.page {\n  margin-top: 30px;\n  margin-left: 20px;\n  margin-right: 20px; }\n\n.box-shadow {\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2); }\n\n.project-header {\n  background: #fff;\n  position: fixed;\n  width: 100%;\n  height: 70px;\n  z-index: 50;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: hidden; }\n  .project-header a:hover {\n    text-decoration: underline; }\n  .project-header input {\n    font: inherit;\n    color: inherit;\n    border: none; }\n    .project-header input::-webkit-input-placeholder {\n      color: inherit; }\n  .project-header__title {\n    font-weight: 500;\n    font-size: 24px;\n    color: #50c3ff; }\n  .project-header__guard {\n    padding-top: 70px; }\n\n@media (min-width: 701px) {\n  .stacks {\n    white-space: nowrap; } }\n\n.stack {\n  display: inline-block;\n  width: 100%;\n  vertical-align: top; }\n  @media (min-width: 701px) {\n    .stack {\n      height: calc(100vh - 100px);\n      width: 300px;\n      margin: 0 20px 0 0; } }\n  .stack__header {\n    font-weight: 600;\n    font-size: 16px;\n    height: 20px; }\n    .stack__header small {\n      float: right; }\n\n.create-form {\n  background: rgba(0, 0, 0, 0.05);\n  border-radius: 2px; }\n  .create-form__input {\n    width: 100%;\n    font-size: 16px; }\n\n.card {\n  background: #fff;\n  border-radius: 2px;\n  white-space: normal;\n  display: block;\n  position: relative;\n  user-select: none; }\n  .card__description {\n    font-size: 14px;\n    color: #666; }\n  .card:hover .card__title, .card:focus .card__title {\n    text-decoration: underline; }\n  .card__meta > * {\n    margin-right: 10px;\n    display: inline; }\n  .card.hot:after {\n    content: \"\";\n    width: 5px;\n    height: 5px;\n    background: red;\n    position: absolute;\n    top: 5px;\n    right: 5px;\n    border-radius: 5px; }\n  .card.dragging {\n    box-shadow: none;\n    opacity: 0.5; }\n\n.card-stack {\n  padding-bottom: 10px; }\n  @media (min-width: 701px) {\n    .card-stack {\n      max-height: calc(100vh - 140px);\n      overflow: auto; } }\n\n#drag-placeholder {\n  border-top: 2px solid #50c3ff;\n  height: 0;\n  position: absolute;\n  z-index: 100; }\n  #drag-placeholder:before, #drag-placeholder:after {\n    content: \"\";\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    left: -6px;\n    top: -5px;\n    background: #50c3ff;\n    border-radius: 8px; }\n  #drag-placeholder:after {\n    left: auto;\n    right: -6px; }\n\n#drag-proxy {\n  background: #fff;\n  width: 100px;\n  margin-top: -40px;\n  margin-left: -50px;\n  text-align: center;\n  padding: 10px 0 25px 0;\n  cursor: move;\n  z-index: 101;\n  border-radius: 10px;\n  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.2);\n  position: absolute; }\n\n.user-stack li {\n  display: inline-block; }\n\n.user-initials {\n  border-radius: 2px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  font-weight: 100;\n  font-size: 9px;\n  color: #fff;\n  width: 28px;\n  height: 28px;\n  background: #999;\n  margin-left: 10px; }\n  .user-initials.empty {\n    background: none;\n    border: 2px dashed #ccc;\n    color: #ccc; }\n\n.longform {\n  line-height: 1.5em; }\n  .longform p + *, .longform ul + *, .longform ol + *, .longform dl + *, .longform h1 + *, .longform h2 + *, .longform h3 + *, .longform h4 + *, .longform h5 + *, .longform h6 + *, .longform pre + *, .longform blockquote + * {\n    margin-top: 10px; }\n  .longform ul, .longform ol, .longform dl {\n    margin-left: 40px; }\n  .longform ul li {\n    list-style: square; }\n  .longform ol li {\n    list-style: decimal; }\n  .longform li {\n    font-size: 14px; }\n  .longform code {\n    border: 1px solid #ccc;\n    border-radius: 2px;\n    background: whiteSmoke;\n    padding: 0 2px; }\n  .longform a {\n    color: #50c3ff; }\n    .longform a:hover {\n      text-decoration: underline; }\n  .longform blockquote {\n    font-size: 18px;\n    color: #50c3ff;\n    margin-left: -10px;\n    margin-right: -10px;\n    font-style: italic;\n    font-weight: 100; }\n\n.card-detail {\n  background: #fff;\n  border-radius: 1px;\n  max-width: 900px; }\n  @media (min-width: 901px) {\n    .card-detail {\n      margin-left: auto;\n      margin-right: auto;\n      padding-left: 40px;\n      padding-right: 40px;\n      margin-top: 30px; } }\n  .card-detail__title {\n    font-weight: 500;\n    font-size: 24px; }\n\n.meta {\n  font-size: 14px;\n  color: #ccc;\n  font-weight: 300; }\n  .meta strong {\n    font-weight: 400;\n    color: #999; }\n  .meta a:hover {\n    text-decoration: underline; }\n\n.byline {\n  font-size: 14px;\n  color: #444;\n  font-weight: 600; }\n\n.invisible-textarea {\n  appearance: none;\n  border: none;\n  box-shadow: none;\n  font-size: 16px;\n  height: 10em;\n  width: 100%;\n  background: none;\n  line-height: 1.5;\n  border-bottom: 1px dashed #ccc; }\n\n.user-input {\n  background: rgba(255, 248, 232, 0.5);\n  border: 1px solid #ccc; }\n\n.project-preview {\n  width: 100%;\n  display: inline-block;\n  border-radius: 1px;\n  margin: 0 30px 30px 0; }\n  .project-preview--stacks {\n    background: #fff; }\n  @media (min-width: 701px) {\n    .project-preview {\n      width: 200px;\n      height: 200px;\n      float: left; } }\n\n.stacks-preview {\n  height: 100px;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.stack-preview {\n  width: 30px;\n  background: #50c3ff;\n  height: 20px;\n  display: inline-block;\n  text-indent: -9999px;\n  margin-right: 5px;\n  border-radius: 1px; }\n\n.comment-meta {\n  display: inline; }\n  .comment-meta__item {\n    display: inline; }\n  .comment-meta__removed {\n    text-decoration: line-through; }\n\n.label {\n  font-size: 14px;\n  color: #999;\n  font-weight: 500; }\n\n.checkbox-pill input {\n  position: absolute;\n  left: -9999px; }\n  .checkbox-pill input:checked + label {\n    border-color: #50c3ff;\n    background-color: #50c3ff; }\n    .checkbox-pill input:checked + label:before {\n      content: \"\\2022\"; }\n  .checkbox-pill input[type=\"checkbox\"]:checked + label:before {\n    content: \"\\2713\"; }\n  .checkbox-pill input:focus + label {\n    text-decoration: underline; }\n\n.checkbox-pill label {\n  position: relative;\n  background: #999;\n  display: inline-block;\n  border-radius: 4px;\n  padding: 3px 10px 3px 20px;\n  overflow: hidden;\n  font-size: 14px;\n  font-weight: 300;\n  color: #fff;\n  white-space: nowrap; }\n  .checkbox-pill label:before {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 20px;\n    height: 100%;\n    text-align: center;\n    line-height: 20px; }\n\n.inline-pills {\n  display: inline-block; }\n\n.show-card-edit {\n  position: absolute;\n  left: -9999px; }\n  .show-card-edit:checked, .show-card-edit:checked + .card-prompt {\n    display: none; }\n  .show-card-edit:checked + .card-prompt + .card-edit {\n    display: block; }\n  .show-card-edit:focus + .card-prompt label {\n    text-decoration: underline; }\n\n.card-edit {\n  display: none; }\n\n.text-button {\n  color: #50c3ff;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer; }\n  .text-button:hover {\n    text-decoration: underline; }\n\n.button {\n  appearance: none;\n  border: none;\n  padding: 10px 15px;\n  background: #32a942;\n  border-radius: 1px;\n  font-size: 16px;\n  color: #fff;\n  font-weight: 300; }\n\n.progress {\n  background: transparent;\n  height: 2px;\n  border-radius: 2px;\n  overflow: hidden;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%; }\n  .progress__bar {\n    display: block;\n    background: #50c3ff;\n    overflow: hidden;\n    text-indent: -9999px;\n    border-radius: 2px;\n    height: 2px;\n    min-width: 10px; }\n\n.stack-chooser__item {\n  float: left;\n  margin-right: 50px;\n  position: relative; }\n  .stack-chooser__item:after {\n    content: \"\\2192\";\n    color: #999;\n    font-weight: 600;\n    position: absolute;\n    top: 0;\n    right: -50px;\n    width: 50px;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center; }\n  .stack-chooser__item:last-child:after {\n    display: none; }\n\n.create-invite__email {\n  font-size: 24px;\n  font-weight: 300;\n  width: 100%;\n  width: 100%; }\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.8\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if log('..') {}` or `$_: log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if log(..) {}` instead.\n  $_: log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if log(..) {}` instead.\n    $_: log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}